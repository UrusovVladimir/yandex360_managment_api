// server/socketHandlers.js
const db = require('../config/database');

module.exports = (io) => {
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleUserCreated = (user) => {
    console.log('üì® User created event:', user);
    io.emit('user_created', user);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleUserUpdated = (user) => {
    console.log('üì® User updated event:', user);
    io.emit('user_updated', user);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleUserDeleted = (userId) => {
    console.log('üì® User deleted event:', userId);
    io.emit('user_deleted', userId);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleAccountCreated = (account) => {
    console.log('üì® Account created event:', account);
    io.emit('account_created', account);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleAccountUpdated = (account) => {
    console.log('üì® Account updated event:', account);
    io.emit('account_updated', account);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleAccountDeleted = (accountId) => {
    console.log('üì® Account deleted event:', accountId);
    io.emit('account_deleted', accountId);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
  const handleSystemEvent = (data) => {
    console.log('üì® System event:', data);
    io.emit('system_event', data);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const sendNotification = (userId, message) => {
    io.to(`user_${userId}`).emit('notification', {
      message,
      timestamp: new Date().toISOString()
    });
  };

  // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
  const initializeSocketHandlers = () => {
    io.on('connection', (socket) => {
      console.log('‚úÖ User connected:', socket.id);

      // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –µ–≥–æ –∫–æ–º–Ω–∞—Ç–µ
      socket.on('join_user_room', (userId) => {
        socket.join(`user_${userId}`);
        console.log(`üë• User ${userId} joined their room`);
      });

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      socket.on('user_created', handleUserCreated);
      socket.on('user_updated', handleUserUpdated);
      socket.on('user_deleted', handleUserDeleted);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
      socket.on('account_created', handleAccountCreated);
      socket.on('account_updated', handleAccountUpdated);
      socket.on('account_deleted', handleAccountDeleted);

      // –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
      socket.on('system_event', handleSystemEvent);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
      socket.on('disconnect', (reason) => {
        console.log('‚ùå User disconnected:', socket.id, 'Reason:', reason);
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      socket.on('error', (error) => {
        console.error('‚ùå Socket error:', error);
      });
    });

    console.log('‚úÖ Socket handlers initialized');
  };

  return {
    initializeSocketHandlers,
    handleUserCreated,
    handleUserUpdated,
    handleUserDeleted,
    handleAccountCreated,
    handleAccountUpdated,
    handleAccountDeleted,
    handleSystemEvent,
    sendNotification
  };
};